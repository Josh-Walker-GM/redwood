// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`From within the empty-project fixture returns the correct cells with a project 1`] = `[]`;

exports[`From within the empty-project fixture returns the correct cells without a project 1`] = `[]`;

exports[`From within the example-todo-main fixture returns the correct cells with a project 1`] = `
[
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/NumTodosCell/NumTodosCell.js",
    "gqlQuery": "
  query NumTodosCell_GetCount {
    todosCount
  }
",
    "gqlQueryName": "NumTodosCell_GetCount",
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "NumTodosCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/NumTodosTwoCell/NumTodosTwoCell.js",
    "gqlQuery": "
  query NumTodosCell_GetCount {
    todosCount
  }
",
    "gqlQueryName": "NumTodosCell_GetCount",
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "NumTodosTwoCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [
      "No "Success" export found but one is required",
      "No "QUERY" export found but one is required",
    ],
    "filepath": "/web/src/components/TableCell/TableCell.js",
    "gqlQuery": undefined,
    "gqlQueryName": undefined,
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": false,
    "hasQueryExport": false,
    "hasSuccessExport": false,
    "isValid": false,
    "name": "TableCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/TodoListCell/TodoListCell.tsx",
    "gqlQuery": "
  query TodoListCell_GetTodos {
    todos {
      id
      body
      status
    }
  }
",
    "gqlQueryName": "TodoListCell_GetTodos",
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "TodoListCell",
    "warnings": [],
  },
]
`;

exports[`From within the example-todo-main fixture returns the correct cells without a project 1`] = `
[
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/NumTodosCell/NumTodosCell.js",
    "gqlQuery": "
  query NumTodosCell_GetCount {
    todosCount
  }
",
    "gqlQueryName": "NumTodosCell_GetCount",
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "NumTodosCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/NumTodosTwoCell/NumTodosTwoCell.js",
    "gqlQuery": "
  query NumTodosCell_GetCount {
    todosCount
  }
",
    "gqlQueryName": "NumTodosCell_GetCount",
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "NumTodosTwoCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [
      "No "Success" export found but one is required",
      "No "QUERY" export found but one is required",
    ],
    "filepath": "/web/src/components/TableCell/TableCell.js",
    "gqlQuery": undefined,
    "gqlQueryName": undefined,
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": false,
    "hasQueryExport": false,
    "hasSuccessExport": false,
    "isValid": false,
    "name": "TableCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/TodoListCell/TodoListCell.tsx",
    "gqlQuery": "
  query TodoListCell_GetTodos {
    todos {
      id
      body
      status
    }
  }
",
    "gqlQueryName": "TodoListCell_GetTodos",
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "TodoListCell",
    "warnings": [],
  },
]
`;

exports[`From within the example-todo-main-with-errors fixture returns the correct cells with a project 1`] = `
[
  RedwoodCell {
    "errors": [
      "No "Success" export found but one is required",
      "No "QUERY" export found but one is required",
    ],
    "filepath": "/web/src/components/TableCell/TableCell.js",
    "gqlQuery": undefined,
    "gqlQueryName": undefined,
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": false,
    "hasQueryExport": false,
    "hasSuccessExport": false,
    "isValid": false,
    "name": "TableCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/TodoListCell/TodoListCell.js",
    "gqlQuery": "
  {
    todos {
      id
      body
      status
    }
  }
",
    "gqlQueryName": undefined,
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "TodoListCell",
    "warnings": [
      "Could not determine the GraphQL query name",
    ],
  },
]
`;

exports[`From within the example-todo-main-with-errors fixture returns the correct cells without a project 1`] = `
[
  RedwoodCell {
    "errors": [
      "No "Success" export found but one is required",
      "No "QUERY" export found but one is required",
    ],
    "filepath": "/web/src/components/TableCell/TableCell.js",
    "gqlQuery": undefined,
    "gqlQueryName": undefined,
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": false,
    "hasQueryExport": false,
    "hasSuccessExport": false,
    "isValid": false,
    "name": "TableCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/TodoListCell/TodoListCell.js",
    "gqlQuery": "
  {
    todos {
      id
      body
      status
    }
  }
",
    "gqlQueryName": undefined,
    "hasEmptyExport": false,
    "hasFailureExport": false,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "TodoListCell",
    "warnings": [
      "Could not determine the GraphQL query name",
    ],
  },
]
`;

exports[`From within the test-project fixture returns the correct cells with a project 1`] = `
[
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/AuthorCell/AuthorCell.tsx",
    "gqlQuery": "
  query FindAuthorQuery($id: Int!) {
    author: user(id: $id) {
      email
      fullName
    }
  }
",
    "gqlQueryName": "FindAuthorQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "AuthorCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/BlogPostCell/BlogPostCell.tsx",
    "gqlQuery": "
  query FindBlogPostQuery($id: Int!) {
    blogPost: post(id: $id) {
      id
      title
      body
      author {
        email
        fullName
      }
      createdAt
    }
  }
",
    "gqlQueryName": "FindBlogPostQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "BlogPostCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/BlogPostsCell/BlogPostsCell.tsx",
    "gqlQuery": "
  query BlogPostsQuery {
    blogPosts: posts {
      id
      title
      body
      author {
        email
        fullName
      }
      createdAt
    }
  }
",
    "gqlQueryName": "BlogPostsQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "BlogPostsCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Contact/ContactCell/ContactCell.tsx",
    "gqlQuery": "
  query FindContactById($id: Int!) {
    contact: contact(id: $id) {
      id
      name
      email
      message
      createdAt
    }
  }
",
    "gqlQueryName": "FindContactById",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "ContactCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Contact/ContactsCell/ContactsCell.tsx",
    "gqlQuery": "
  query FindContacts {
    contacts {
      id
      name
      email
      message
      createdAt
    }
  }
",
    "gqlQueryName": "FindContacts",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "ContactsCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Contact/EditContactCell/EditContactCell.tsx",
    "gqlQuery": "
  query EditContactById($id: Int!) {
    contact: contact(id: $id) {
      id
      name
      email
      message
      createdAt
    }
  }
",
    "gqlQueryName": "EditContactById",
    "hasEmptyExport": false,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "EditContactCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Post/EditPostCell/EditPostCell.tsx",
    "gqlQuery": "
  query EditPostById($id: Int!) {
    post: post(id: $id) {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "EditPostById",
    "hasEmptyExport": false,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "EditPostCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Post/PostCell/PostCell.tsx",
    "gqlQuery": "
  query FindPostById($id: Int!) {
    post: post(id: $id) {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "FindPostById",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "PostCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Post/PostsCell/PostsCell.tsx",
    "gqlQuery": "
  query FindPosts {
    posts {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "FindPosts",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "PostsCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/WaterfallBlogPostCell/WaterfallBlogPostCell.tsx",
    "gqlQuery": "
  query FindWaterfallBlogPostQuery($id: Int!) {
    waterfallBlogPost: post(id: $id) {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "FindWaterfallBlogPostQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "WaterfallBlogPostCell",
    "warnings": [],
  },
]
`;

exports[`From within the test-project fixture returns the correct cells without a project 1`] = `
[
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/AuthorCell/AuthorCell.tsx",
    "gqlQuery": "
  query FindAuthorQuery($id: Int!) {
    author: user(id: $id) {
      email
      fullName
    }
  }
",
    "gqlQueryName": "FindAuthorQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "AuthorCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/BlogPostCell/BlogPostCell.tsx",
    "gqlQuery": "
  query FindBlogPostQuery($id: Int!) {
    blogPost: post(id: $id) {
      id
      title
      body
      author {
        email
        fullName
      }
      createdAt
    }
  }
",
    "gqlQueryName": "FindBlogPostQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "BlogPostCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/BlogPostsCell/BlogPostsCell.tsx",
    "gqlQuery": "
  query BlogPostsQuery {
    blogPosts: posts {
      id
      title
      body
      author {
        email
        fullName
      }
      createdAt
    }
  }
",
    "gqlQueryName": "BlogPostsQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "BlogPostsCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Contact/ContactCell/ContactCell.tsx",
    "gqlQuery": "
  query FindContactById($id: Int!) {
    contact: contact(id: $id) {
      id
      name
      email
      message
      createdAt
    }
  }
",
    "gqlQueryName": "FindContactById",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "ContactCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Contact/ContactsCell/ContactsCell.tsx",
    "gqlQuery": "
  query FindContacts {
    contacts {
      id
      name
      email
      message
      createdAt
    }
  }
",
    "gqlQueryName": "FindContacts",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "ContactsCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Contact/EditContactCell/EditContactCell.tsx",
    "gqlQuery": "
  query EditContactById($id: Int!) {
    contact: contact(id: $id) {
      id
      name
      email
      message
      createdAt
    }
  }
",
    "gqlQueryName": "EditContactById",
    "hasEmptyExport": false,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "EditContactCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Post/EditPostCell/EditPostCell.tsx",
    "gqlQuery": "
  query EditPostById($id: Int!) {
    post: post(id: $id) {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "EditPostById",
    "hasEmptyExport": false,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "EditPostCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Post/PostCell/PostCell.tsx",
    "gqlQuery": "
  query FindPostById($id: Int!) {
    post: post(id: $id) {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "FindPostById",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "PostCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/Post/PostsCell/PostsCell.tsx",
    "gqlQuery": "
  query FindPosts {
    posts {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "FindPosts",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "PostsCell",
    "warnings": [],
  },
  RedwoodCell {
    "errors": [],
    "filepath": "/web/src/components/WaterfallBlogPostCell/WaterfallBlogPostCell.tsx",
    "gqlQuery": "
  query FindWaterfallBlogPostQuery($id: Int!) {
    waterfallBlogPost: post(id: $id) {
      id
      title
      body
      authorId
      createdAt
    }
  }
",
    "gqlQueryName": "FindWaterfallBlogPostQuery",
    "hasEmptyExport": true,
    "hasFailureExport": true,
    "hasLoadingExport": true,
    "hasQueryExport": true,
    "hasSuccessExport": true,
    "isValid": true,
    "name": "WaterfallBlogPostCell",
    "warnings": [],
  },
]
`;
